<?php

namespace backend\models\employee;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "employees".
 *
 * @property int $id
 * @property int|null $job_id
 * @property string|null $full_name
 * @property string|null $phone_number
 * @property string|null $telegram
 * @property string|null $facebook
 * @property string|null $twitter
 * @property string|null $instagram
 * @property int|null $created_at
 * @property int|null $updated_at
 * @property string|null $image
 *
 * @property EmployeeJobs $job
 */
class Employees extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'employees';
    }


    public function behaviors()
    {
        return [
            TimestampBehavior::className()
        ]; // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['job_id', 'created_at', 'updated_at'], 'integer'],
            [['full_name', 'phone_number', 'telegram', 'facebook', 'twitter', 'instagram', 'image'], 'string', 'max' => 255],
            [['job_id'], 'exist', 'skipOnError' => true, 'targetClass' => EmployeeJobs::class, 'targetAttribute' => ['job_id' => 'id']],
            [['full_name', 'job_id', 'phone_number'], 'required'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'job_id' => 'Job ID',
            'full_name' => 'Full Name',
            'phone_number' => 'Phone Number',
            'telegram' => 'Telegram',
            'facebook' => 'Facebook',
            'twitter' => 'Twitter',
            'instagram' => 'Instagram',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'image' => 'Image',
        ];
    }

    /**
     * Gets query for [[Job]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getJob()
    {
        return $this->hasOne(EmployeeJobs::class, ['id' => 'job_id']);
    }
}
